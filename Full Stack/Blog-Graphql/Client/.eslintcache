[{"D:\\Blog-Graphql\\client\\src\\index.js":"1","D:\\Blog-Graphql\\client\\src\\App.js":"2","D:\\Blog-Graphql\\client\\src\\reportWebVitals.js":"3","D:\\Blog-Graphql\\client\\src\\context\\AuthContext.js":"4","D:\\Blog-Graphql\\client\\src\\component\\Footer.js":"5","D:\\Blog-Graphql\\client\\src\\component\\EditPost.js":"6","D:\\Blog-Graphql\\client\\src\\pages\\AddPosts.js":"7","D:\\Blog-Graphql\\client\\src\\component\\Sidenav.js":"8","D:\\Blog-Graphql\\client\\src\\component\\Navbar.js":"9","D:\\Blog-Graphql\\client\\src\\pages\\LoginPage.js":"10","D:\\Blog-Graphql\\client\\src\\pages\\Homepage.js":"11","D:\\Blog-Graphql\\client\\src\\pages\\PostPage.js":"12","D:\\Blog-Graphql\\client\\src\\pages\\SinglePost.js":"13","D:\\Blog-Graphql\\client\\src\\component\\Auth\\ResetPassword.js":"14","D:\\Blog-Graphql\\client\\src\\component\\Auth\\Signup.js":"15","D:\\Blog-Graphql\\client\\src\\component\\AddPost.js":"16","D:\\Blog-Graphql\\client\\src\\component\\Posts.js":"17","D:\\Blog-Graphql\\client\\src\\component\\Hero.js":"18","D:\\Blog-Graphql\\client\\src\\component\\Auth\\Login.js":"19","D:\\Blog-Graphql\\client\\src\\component\\Post.js":"20","D:\\Blog-Graphql\\client\\src\\component\\Pagination.js":"21"},{"size":476,"mtime":1610127255528,"results":"22","hashOfConfig":"23"},{"size":1461,"mtime":1610477525606,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":3296,"mtime":1612887732012,"results":"26","hashOfConfig":"23"},{"size":399,"mtime":1609955703227,"results":"27","hashOfConfig":"23"},{"size":5480,"mtime":1612886691449,"results":"28","hashOfConfig":"23"},{"size":183,"mtime":1610478225659,"results":"29","hashOfConfig":"23"},{"size":1131,"mtime":1610540325715,"results":"30","hashOfConfig":"23"},{"size":2042,"mtime":1610535358906,"results":"31","hashOfConfig":"23"},{"size":184,"mtime":1609604045099,"results":"32","hashOfConfig":"23"},{"size":174,"mtime":1610041195108,"results":"33","hashOfConfig":"23"},{"size":146,"mtime":1610031642770,"results":"34","hashOfConfig":"23"},{"size":4011,"mtime":1612887070940,"results":"35","hashOfConfig":"23"},{"size":2696,"mtime":1610121097079,"results":"36","hashOfConfig":"23"},{"size":4459,"mtime":1610464306341,"results":"37","hashOfConfig":"23"},{"size":4200,"mtime":1612883633271,"results":"38","hashOfConfig":"23"},{"size":2377,"mtime":1612887743935,"results":"39","hashOfConfig":"23"},{"size":899,"mtime":1610132007783,"results":"40","hashOfConfig":"23"},{"size":2655,"mtime":1610471395631,"results":"41","hashOfConfig":"23"},{"size":1631,"mtime":1610646668841,"results":"42","hashOfConfig":"23"},{"size":777,"mtime":1609955661111,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1bn4x5",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"D:\\Blog-Graphql\\client\\src\\index.js",[],["89","90"],"D:\\Blog-Graphql\\client\\src\\App.js",[],"D:\\Blog-Graphql\\client\\src\\reportWebVitals.js",[],"D:\\Blog-Graphql\\client\\src\\context\\AuthContext.js",["91"],"import React, { createContext, useEffect, useState } from \"react\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [token, setToken] = useState(\"\");\r\n  const [userId, setUserId] = useState(\"\");\r\n\r\n  const logoutHandler = async () => {\r\n    try {\r\n      const token = await localStorage.removeItem(\"token\");\r\n      const userId = await localStorage.removeItem(\"userId\");\r\n      await localStorage.removeItem(\"expiryDate\");\r\n      setToken(token);\r\n      setUserId(userId);\r\n    } catch (err) {}\r\n  };\r\n\r\n  const setAutoLogout = (milliseconds) => {\r\n    setTimeout(() => {\r\n      logoutHandler();\r\n    }, milliseconds);\r\n  };\r\n\r\n  const login = (email, password) => {\r\n    const graphqlQuery = {\r\n      query: `\r\n        {\r\n          login(email: \"${email}\", password: \"${password}\"){\r\n            token\r\n            userId\r\n          }\r\n        }\r\n      `,\r\n    };\r\n\r\n    setError(\"\");\r\n    setLoading(true);\r\n    fetch(\"http://localhost:4000/graphql\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(graphqlQuery),\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((resData) => {\r\n        if (resData.errors && resData.errors[0].status === 422) {\r\n          throw new Error(\"Validation failed!\");\r\n        }\r\n        if (resData.errors) {\r\n          throw new Error(\"Signin failed,  Email already exists!\");\r\n        }\r\n        localStorage.setItem(\"token\", resData.data.login.token);\r\n        localStorage.setItem(\"userId\", resData.data.login.userId);\r\n        const remainingMilliseconds = 60 * 60 * 1000;\r\n        const expiryDate = new Date(\r\n          new Date().getTime() + remainingMilliseconds\r\n        );\r\n        localStorage.setItem(\"expiryDate\", expiryDate.toISOString());\r\n        setAutoLogout(remainingMilliseconds);\r\n        setToken(resData.data.login.token);\r\n        setUserId(resData.data.login.userId);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setError(err.message);\r\n        setLoading(false);\r\n      });\r\n    setLoading(false);\r\n  };\r\n\r\n  const setUser = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const token = await localStorage.getItem(\"token\");\r\n      const expiryDate = await localStorage.getItem(\"expiryDate\");\r\n      if (!token || !expiryDate) {\r\n        const err = new Error(\"Unable to fetch user.\");\r\n        throw err;\r\n      }\r\n      if (new Date(expiryDate) <= new Date()) {\r\n        const err = new Error(\"Unable to fetch user.\");\r\n        throw err;\r\n      }\r\n      const useId = await localStorage.getItem(\"userId\");\r\n      const remainingMilliseconds =\r\n        new Date(expiryDate).getTime() - new Date().getTime();\r\n      setToken(token);\r\n      setUserId(useId);\r\n      setAutoLogout(remainingMilliseconds);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setUser();\r\n  }, []);\r\n\r\n  const value = { login, logoutHandler, error, token, userId };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthProvider;\r\n","D:\\Blog-Graphql\\client\\src\\component\\Footer.js",[],"D:\\Blog-Graphql\\client\\src\\component\\EditPost.js",[],"D:\\Blog-Graphql\\client\\src\\pages\\AddPosts.js",[],"D:\\Blog-Graphql\\client\\src\\component\\Sidenav.js",[],"D:\\Blog-Graphql\\client\\src\\component\\Navbar.js",[],"D:\\Blog-Graphql\\client\\src\\pages\\LoginPage.js",[],"D:\\Blog-Graphql\\client\\src\\pages\\Homepage.js",[],"D:\\Blog-Graphql\\client\\src\\pages\\PostPage.js",[],"D:\\Blog-Graphql\\client\\src\\pages\\SinglePost.js",[],"D:\\Blog-Graphql\\client\\src\\component\\Auth\\ResetPassword.js",[],"D:\\Blog-Graphql\\client\\src\\component\\Auth\\Signup.js",[],"D:\\Blog-Graphql\\client\\src\\component\\AddPost.js",[],"D:\\Blog-Graphql\\client\\src\\component\\Posts.js",["92"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Post } from \"./Post\";\r\nimport Pagination from \"./Pagination\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nfunction Posts() {\r\n  const { token } = useContext(AuthContext);\r\n\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(2);\r\n\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  const onBtnClick = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const fetchPosts = async () => {\r\n    const graphqlQuery = {\r\n      query: `\r\n        {\r\n          posts {\r\n            posts {\r\n              _id\r\n              title\r\n              content\r\n              imageUrl\r\n              author {\r\n                name\r\n              }\r\n              createdAt\r\n            }\r\n          }\r\n        }\r\n      `,\r\n    };\r\n\r\n    fetch(\"http://localhost:4000/graphql\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(graphqlQuery),\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((resData) => {\r\n        if (resData.errors) {\r\n          throw new Error(\"Unable to fetch posts!\");\r\n        }\r\n        setPosts(resData.data.posts.posts);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        setError(error.message);\r\n        setLoading(false);\r\n      });\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"post-card\">\r\n        <h1 className=\"text-3xl mb2\">Loading...</h1>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-full h-screen\">\r\n      <h1 className=\"text-5xl m-4 text-center text-green-700\">All Posts</h1>\r\n      {error && <p className=\"text-red-500\">{error}</p>}\r\n      <Post posts={currentPosts} />\r\n      <Pagination\r\n        elementsPerPage={postsPerPage}\r\n        totalElements={posts.length}\r\n        onBtnClick={onBtnClick}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Posts;\r\n","D:\\Blog-Graphql\\client\\src\\component\\Hero.js",[],"D:\\Blog-Graphql\\client\\src\\component\\Auth\\Login.js",[],"D:\\Blog-Graphql\\client\\src\\component\\Post.js",[],"D:\\Blog-Graphql\\client\\src\\component\\Pagination.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":102,"column":6,"nodeType":"99","endLine":102,"endColumn":8,"suggestions":"100"},{"ruleId":"97","severity":1,"message":"101","line":70,"column":6,"nodeType":"99","endLine":70,"endColumn":8,"suggestions":"102"},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setUser'. Either include it or remove the dependency array.","ArrayExpression",["105"],"React Hook useEffect has a missing dependency: 'fetchPosts'. Either include it or remove the dependency array.",["106"],"no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},"Update the dependencies array to be: [setUser]",{"range":"111","text":"112"},"Update the dependencies array to be: [fetchPosts]",{"range":"113","text":"114"},[3066,3068],"[setUser]",[1809,1811],"[fetchPosts]"]